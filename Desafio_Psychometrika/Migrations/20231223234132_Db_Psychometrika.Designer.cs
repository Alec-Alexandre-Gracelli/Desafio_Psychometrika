// <auto-generated />
using System;
using Desafio_Psychometrika.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Desafio_Psychometrika.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20231223234132_Db_Psychometrika")]
    partial class Db_Psychometrika
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Desafio_Psychometrika.Models.AlternativaQuestoes", b =>
                {
                    b.Property<Guid>("AlternativaQuestoesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Alternativas")
                        .HasColumnType("int");

                    b.Property<bool>("Correta")
                        .HasColumnType("bit");

                    b.Property<Guid>("QuestoesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AlternativaQuestoesId");

                    b.HasIndex("QuestoesId");

                    b.ToTable("AlternativaQuestoes");
                });

            modelBuilder.Entity("Desafio_Psychometrika.Models.ProvaSimulado", b =>
                {
                    b.Property<Guid>("ProvaSimuladoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProvaNome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProvaSimuladoId");

                    b.ToTable("ProvaSimulados");
                });

            modelBuilder.Entity("Desafio_Psychometrika.Models.Questoes", b =>
                {
                    b.Property<Guid>("QuestoesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProvaSimuladoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Questao")
                        .HasColumnType("int");

                    b.HasKey("QuestoesId");

                    b.HasIndex("ProvaSimuladoId");

                    b.ToTable("Questoes");
                });

            modelBuilder.Entity("Desafio_Psychometrika.Models.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ProvaSimuladoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Desafio_Psychometrika.Models.AlternativaQuestoes", b =>
                {
                    b.HasOne("Desafio_Psychometrika.Models.Questoes", null)
                        .WithMany("AlternativaQuestoes")
                        .HasForeignKey("QuestoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Desafio_Psychometrika.Models.Questoes", b =>
                {
                    b.HasOne("Desafio_Psychometrika.Models.ProvaSimulado", null)
                        .WithMany("Questoes")
                        .HasForeignKey("ProvaSimuladoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Desafio_Psychometrika.Models.ProvaSimulado", b =>
                {
                    b.Navigation("Questoes");
                });

            modelBuilder.Entity("Desafio_Psychometrika.Models.Questoes", b =>
                {
                    b.Navigation("AlternativaQuestoes");
                });
#pragma warning restore 612, 618
        }
    }
}
